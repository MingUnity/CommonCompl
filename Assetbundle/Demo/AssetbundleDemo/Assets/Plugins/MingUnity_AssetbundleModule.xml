<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MingUnity_AssetbundleModule</name>
    </assembly>
    <members>
        <member name="T:MingUnity.AssetbundleModule.AsyncAssetBundleLoader">
            <summary>
            异步AB包加载
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.AsyncAssetBundleLoader.Preload(System.String)">
            <summary>
            预加载
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.AsyncAssetBundleLoader.GetAsset``1(System.String,System.String,System.Action{``0})">
            <summary>
            异步加载资源
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.AsyncAssetBundleLoader.AsyncLoadAB(System.String,System.Action{UnityEngine.AssetBundle})">
            <summary>
            加载AB包
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.AsyncAssetBundleLoader.AsyncGetAsset(UnityEngine.AssetBundle,System.String,System.Action{UnityEngine.Object})">
            <summary>
            异步获取资源
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.AsyncAssetBundleLoader.AsyncLoadAB(System.String,MingUnity.AssetbundleModule.AssetBundleModel)">
            <summary>
            异步加载AB包 
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.AsyncAssetBundleLoader.Unload(System.String,System.Boolean)">
            <summary>
            卸载
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.AsyncAssetBundleLoader.UnloadAll(System.Boolean)">
            <summary>
            卸载全部
            </summary>
        </member>
        <member name="T:MingUnity.AssetbundleModule.IAssetBundleLoader">
            <summary>
            AB包加载接口
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.IAssetBundleLoader.Preload(System.String)">
            <summary>
            预加载AB包
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.IAssetBundleLoader.GetAsset``1(System.String,System.String,System.Action{``0})">
            <summary>
            获取资源
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.IAssetBundleLoader.Unload(System.String,System.Boolean)">
            <summary>
            卸载AB包
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.IAssetBundleLoader.UnloadAll(System.Boolean)">
            <summary>
            卸载所有AB包
            </summary>
        </member>
        <member name="T:MingUnity.AssetbundleModule.SyncAssetBundleLoader">
            <summary>
            同步ab包加载
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.SyncAssetBundleLoader.Preload(System.String)">
            <summary>
            预加载
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.SyncAssetBundleLoader.GetAsset``1(System.String,System.String,System.Action{``0})">
            <summary>
            获取资源
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.SyncAssetBundleLoader.LoadAb(System.String)">
            <summary>
            加载AB包
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.SyncAssetBundleLoader.Unload(System.String,System.Boolean)">
            <summary>
            卸载
            </summary>
        </member>
        <member name="M:MingUnity.AssetbundleModule.SyncAssetBundleLoader.UnloadAll(System.Boolean)">
            <summary>
            卸载全部
            </summary>
        </member>
        <member name="T:MingUnity.AssetbundleModule.AssetBundleModel">
            <summary>
            AB包数据模型
            </summary>
        </member>
        <member name="F:MingUnity.AssetbundleModule.AssetBundleModel.LoadedAction">
            <summary>
            加载完成动作
            </summary>
        </member>
        <member name="F:MingUnity.AssetbundleModule.AssetBundleModel.assetBundle">
            <summary>
            AB包
            </summary>
        </member>
        <member name="F:MingUnity.AssetbundleModule.AssetBundleModel.loadState">
            <summary>
            加载状态
            </summary>
        </member>
        <member name="T:MingUnity.AssetbundleModule.AssetBundleModel.LoadState">
            <summary>
            加载状态枚举
            </summary>
        </member>
        <member name="F:MingUnity.AssetbundleModule.AssetBundleModel.LoadState.Unload">
            <summary>
            未加载
            </summary>
        </member>
        <member name="F:MingUnity.AssetbundleModule.AssetBundleModel.LoadState.Loading">
            <summary>
            正在加载
            </summary>
        </member>
        <member name="F:MingUnity.AssetbundleModule.AssetBundleModel.LoadState.Loaded">
            <summary>
            加载完成
            </summary>
        </member>
        <member name="P:MingUnity.AssetbundleModule.Task.Running">
            Returns true if and only if the coroutine is running.  Paused tasks  
            are considered to be running.  
        </member>
        <member name="P:MingUnity.AssetbundleModule.Task.Paused">
            Returns true if and only if the coroutine is currently paused.  
        </member>
        <member name="T:MingUnity.AssetbundleModule.Task.FinishedHandler">
            Delegate for termination subscribers.  manual is true if and only if  
            the coroutine was stopped with an explicit call to Stop().  
        </member>
        <member name="E:MingUnity.AssetbundleModule.Task.Finished">
            Termination event.  Triggered when the coroutine completes execution.  
        </member>
        <member name="M:MingUnity.AssetbundleModule.Task.#ctor(System.Collections.IEnumerator,System.Boolean)">
            Creates a new Task object for the given coroutine.  
             
            If autoStart is true (default) the task is automatically started  
            upon construction.  
        </member>
        <member name="M:MingUnity.AssetbundleModule.Task.Start">
            Begins execution of the coroutine  
        </member>
        <member name="M:MingUnity.AssetbundleModule.Task.Stop">
            Discontinues execution of the coroutine at its next yield.  
        </member>
        <member name="T:MingUnity.AssetbundleModule.TaskQueue">
            <summary>
            任务队列
            在某个时间点最多只有一个协程在执行，先加入队列中的先执行，后加入的后执行
            </summary>
        </member>
    </members>
</doc>
